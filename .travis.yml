sudo: required
language: csharp
dist: xenial
dotnet: 3.1
mono: none

stages:
  - compile & unit test
  - test

env:
  - CONFIGURATION=Release NOTHREADS=10 SECURITY=OFF
  - CONFIGURATION=Release NOTHREADS=10 SECURITY=SSL
  - CONFIGURATION=Release NOTHREADS=10 SECURITY=TLS
  - CONFIGURATION=Release NOTHREADS=20 SECURITY=OFF
  - CONFIGURATION=Release NOTHREADS=20 SECURITY=SSL
  - CONFIGURATION=Release NOTHREADS=20 SECURITY=TLS
  - CONFIGURATION=Release NOTHREADS=50 SECURITY=OFF
  - CONFIGURATION=Release NOTHREADS=50 SECURITY=SSL
  - CONFIGURATION=Release NOTHREADS=50 SECURITY=TLS

addons:
  apt:
    packages:
    - ldap-utils
    - gnutls-bin
    - ssl-cert
    - slapd

before_script:
  - chmod ugo+x configure-openldap.sh
  - ./configure-openldap.sh

jobs:
  include:
    - stage: compile & unit test
      env:
      - CONFIGURATION=Release
      script:
      - dotnet restore
      - dotnet build --configuration $CONFIGURATION
      - export TRANSPORT_SECURITY=OFF; dotnet test --configuration $CONFIGURATION test/Novell.Directory.Ldap.NETStandard.FunctionalTests/Novell.Directory.Ldap.NETStandard.FunctionalTests.csproj
      - export TRANSPORT_SECURITY=SSL; dotnet test --configuration $CONFIGURATION test/Novell.Directory.Ldap.NETStandard.FunctionalTests/Novell.Directory.Ldap.NETStandard.FunctionalTests.csproj
      - export TRANSPORT_SECURITY=TLS; dotnet test --configuration $CONFIGURATION test/Novell.Directory.Ldap.NETStandard.FunctionalTests/Novell.Directory.Ldap.NETStandard.FunctionalTests.csproj
      - dotnet test --configuration $CONFIGURATION test/Novell.Directory.Ldap.NETStandard.UnitTests/Novell.Directory.Ldap.NETStandard.UnitTests.csproj

script:
  - dotnet restore
  - dotnet build --configuration $CONFIGURATION
  - export TRANSPORT_SECURITY=$SECURITY; dotnet run --configuration $CONFIGURATION --project test/Novell.Directory.Ldap.NETStandard.StressTests/Novell.Directory.Ldap.NETStandard.StressTests.csproj $NOTHREADS 30